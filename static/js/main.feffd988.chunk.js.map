{"version":3,"sources":["components/Quote.js","components/TweetQuote.js","components/NewQuote.js","components/Buttons.js","components/Spinner.js","App.js","index.js"],"names":["Quote","props","id","quotes","quote","author","TweetQuote","href","NewQuote","onClick","changeQuote","bind","Buttons","className","Spinner","App","state","isLoaded","fetch","then","response","json","setState","catch","err","alert","window","location","reload","this","Component","ReactDOM","render","document","getElementById"],"mappings":"uQAgBeA,EAdD,SAACC,GAEb,OACE,6BACE,uBAAGC,GAAG,QACHD,EAAME,OAAO,GAAGC,OAEnB,0BAAMF,GAAG,UACND,EAAME,OAAO,GAAGE,UCIVC,EAZI,SAACL,GAElB,OACE,uBACEC,GAAG,cACHK,KAAM,8EAAgFN,EAAME,OAAO,GAAGC,MAAQ,IAAMH,EAAME,OAAO,GAAGE,QAFtI,gBCSWG,EAZE,SAACP,GAEhB,OACE,4BACEC,GAAG,YACHO,QAASR,EAAMS,YAAYC,U,IAF7B,cCSWC,EAVC,SAACX,GAEf,OACE,yBAAKY,UAAU,WACb,kBAAC,EAAD,CAAYV,OAAQF,EAAME,SAC1B,kBAAC,EAAD,CAAUO,YAAaT,EAAMS,gBCIpBI,EAXC,SAACb,GAEf,OACE,yBAAKY,UAAU,OACb,yBAAKX,GAAG,aACN,yBAAKW,UAAU,eCsDRE,G,kBAtDb,WAAYd,GAAQ,IAAD,8BACjB,4CAAMA,KACDe,MAAQ,CACXb,OAAQ,GACRc,UAAU,GAJK,E,iFAQE,IAAD,OAClBC,MAAM,4EAA6E,CACjF,OAAU,MACV,QAAW,CACT,kBAAmB,gDACnB,iBAAkB,wDAGrBC,MAAK,SAAAC,GAAQ,OAAIA,EAASC,UAC1BF,MAAK,SAAAC,GACJ,EAAKE,SAAS,CACZL,UAAU,EACVd,OAAQiB,OAGXG,OAAM,SAAAC,GACLC,MAAM,yC,oCAKRC,OAAOC,SAASC,QAAO,K,+BAGhB,IAAD,EACoBC,KAAKb,MAAzBC,EADA,EACAA,SAAUd,EADV,EACUA,OAEhB,OAAIc,EAIA,yBAAKJ,UAAU,OACb,yBAAKX,GAAG,aACN,kBAAC,EAAD,CAAOC,OAAQA,IACf,kBAAC,EAAD,CACEA,OAAQA,EACRO,YAAamB,KAAKnB,gBARnB,kBAAC,EAAD,U,GArCKoB,cCDlBC,IAASC,OAAO,kBAAC,EAAD,MAASC,SAASC,eAAe,U","file":"static/js/main.feffd988.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nconst Quote = (props) => {\r\n\r\n  return (\r\n    <div>\r\n      <q id=\"text\">\r\n        {props.quotes[0].quote}\r\n      </q>\r\n      <cite id=\"author\">\r\n        {props.quotes[0].author}\r\n      </cite>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Quote;","import React from 'react';\r\n\r\nconst TweetQuote = (props) => {\r\n\r\n  return (\r\n    <a \r\n      id=\"tweet-quote\" \r\n      href={'https://twitter.com/intent/tweet?hashtags=quotes&related=freecodecamp&text=' + props.quotes[0].quote + ' ' + props.quotes[0].author}\r\n    >\r\n      Tweet quote\r\n    </a>\r\n  )\r\n}\r\n\r\nexport default TweetQuote;","import React from 'react';\r\n\r\nconst NewQuote = (props) => {\r\n\r\n  return (\r\n    <button \r\n      id=\"new-quote\" \r\n      onClick={props.changeQuote.bind(this)}\r\n    >\r\n      New quote\r\n    </button>\r\n  )\r\n}\r\n\r\nexport default NewQuote;","import React from 'react';\r\nimport TweetQuote from './TweetQuote';\r\nimport NewQuote from './NewQuote';\r\n\r\nconst Buttons = (props) => {\r\n\r\n  return (\r\n    <div className=\"buttons\">\r\n      <TweetQuote quotes={props.quotes} />\r\n      <NewQuote changeQuote={props.changeQuote} />\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Buttons;","import React from 'react';\r\n\r\nconst Spinner = (props) => {\r\n\r\n  return (\r\n    <div className=\"App\">\r\n      <div id=\"quote-box\">\r\n        <div className=\"spinner\"></div>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Spinner;","import React, { Component } from 'react';\nimport Quote from './components/Quote';\nimport Buttons from './components/Buttons';\nimport Spinner from './components/Spinner';\nimport './App.css';\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      quotes: [],\n      isLoaded: false\n    }\n  }\n\n  componentDidMount() {\n    fetch(\"https://andruxnet-random-famous-quotes.p.rapidapi.com/?cat=famous&count=1\", {\n      \"method\": \"GET\",\n      \"headers\": {\n        \"x-rapidapi-host\": \"andruxnet-random-famous-quotes.p.rapidapi.com\",\n        \"x-rapidapi-key\": \"8ec386ec60msh579026526fbc14cp13550ejsn503782a91fff\"\n      }\n    })\n    .then(response => response.json())\n    .then(response => {\n      this.setState({\n        isLoaded: true,\n        quotes: response\n      });\n    })\n    .catch(err => {\n      alert('Some error occur in application.')\n    });\n  }\n\n  changeQuote(){\n    window.location.reload(true);\n  }\n\n  render(){\n    let { isLoaded, quotes} = this.state;\n\n    if(!isLoaded){\n      return <Spinner />\n    } else {\n      return (\n        <div className=\"App\">\n          <div id=\"quote-box\">\n            <Quote quotes={quotes}/>\n            <Buttons\n              quotes={quotes}\n              changeQuote={this.changeQuote}\n            >\n            </Buttons>\n          </div>\n        </div>\n      );\n    }\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}